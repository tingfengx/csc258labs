|poly_function
SW[0] => SW[0].IN2
SW[1] => SW[1].IN2
SW[2] => SW[2].IN2
SW[3] => SW[3].IN2
SW[4] => SW[4].IN2
SW[5] => SW[5].IN2
SW[6] => SW[6].IN2
SW[7] => SW[7].IN2
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => resetn.IN1
KEY[1] => go.IN1
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN1
LEDR[0] <= quotient[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= quotient[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= quotient[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= quotient[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
HEX0[0] <= hex_decoder:H0.segments
HEX0[1] <= hex_decoder:H0.segments
HEX0[2] <= hex_decoder:H0.segments
HEX0[3] <= hex_decoder:H0.segments
HEX0[4] <= hex_decoder:H0.segments
HEX0[5] <= hex_decoder:H0.segments
HEX0[6] <= hex_decoder:H0.segments
HEX1[0] <= hex_decoder:H1.segments
HEX1[1] <= hex_decoder:H1.segments
HEX1[2] <= hex_decoder:H1.segments
HEX1[3] <= hex_decoder:H1.segments
HEX1[4] <= hex_decoder:H1.segments
HEX1[5] <= hex_decoder:H1.segments
HEX1[6] <= hex_decoder:H1.segments
HEX2[0] <= hex_decoder:H2.segments
HEX2[1] <= hex_decoder:H2.segments
HEX2[2] <= hex_decoder:H2.segments
HEX2[3] <= hex_decoder:H2.segments
HEX2[4] <= hex_decoder:H2.segments
HEX2[5] <= hex_decoder:H2.segments
HEX2[6] <= hex_decoder:H2.segments
HEX3[0] <= hex_decoder:H3.segments
HEX3[1] <= hex_decoder:H3.segments
HEX3[2] <= hex_decoder:H3.segments
HEX3[3] <= hex_decoder:H3.segments
HEX3[4] <= hex_decoder:H3.segments
HEX3[5] <= hex_decoder:H3.segments
HEX3[6] <= hex_decoder:H3.segments
HEX4[0] <= hex_decoder:H4.segments
HEX4[1] <= hex_decoder:H4.segments
HEX4[2] <= hex_decoder:H4.segments
HEX4[3] <= hex_decoder:H4.segments
HEX4[4] <= hex_decoder:H4.segments
HEX4[5] <= hex_decoder:H4.segments
HEX4[6] <= hex_decoder:H4.segments
HEX5[0] <= hex_decoder:H5.segments
HEX5[1] <= hex_decoder:H5.segments
HEX5[2] <= hex_decoder:H5.segments
HEX5[3] <= hex_decoder:H5.segments
HEX5[4] <= hex_decoder:H5.segments
HEX5[5] <= hex_decoder:H5.segments
HEX5[6] <= hex_decoder:H5.segments


|poly_function|part2:u0
clk => clk.IN2
resetn => resetn.IN2
go => go.IN1
data_in[0] => data_in[0].IN1
data_in[1] => data_in[1].IN1
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
quotient[0] <= datapath:D0.data_result
quotient[1] <= datapath:D0.data_result
quotient[2] <= datapath:D0.data_result
quotient[3] <= datapath:D0.data_result
remainder[0] <= datapath:D0.registerA
remainder[1] <= datapath:D0.registerA
remainder[2] <= datapath:D0.registerA
remainder[3] <= datapath:D0.registerA
remainder[4] <= datapath:D0.registerA


|poly_function|part2:u0|control:C0
clk => current_state~1.DATAIN
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
go => Selector1.IN2
go => Selector0.IN2
go => next_state.S_CLEAR.DATAB
ld_divisor <= ld_dividend.DB_MAX_OUTPUT_PORT_TYPE
ld_dividend <= ld_dividend.DB_MAX_OUTPUT_PORT_TYPE
ld_registerA <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
ld_r <= ld_r.DB_MAX_OUTPUT_PORT_TYPE
dividend_shift <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
dividend_q0_set <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
register_shift <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
save_subtracted <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
alu_op <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
clear <= clear.DB_MAX_OUTPUT_PORT_TYPE


|poly_function|part2:u0|datapath:D0
clk => registerA[0]~reg0.CLK
clk => registerA[1]~reg0.CLK
clk => registerA[2]~reg0.CLK
clk => registerA[3]~reg0.CLK
clk => registerA[4]~reg0.CLK
clk => data_result[0]~reg0.CLK
clk => data_result[1]~reg0.CLK
clk => data_result[2]~reg0.CLK
clk => data_result[3]~reg0.CLK
clk => dividend[0].CLK
clk => dividend[1].CLK
clk => dividend[2].CLK
clk => dividend[3].CLK
clk => divisor[0].CLK
clk => divisor[1].CLK
clk => divisor[2].CLK
clk => divisor[3].CLK
clk => divisor[4].CLK
clk => subtracted[4].CLK
resetn => always3.IN0
clear => always3.IN1
dividend_in[0] => dividend.DATAB
dividend_in[1] => dividend.DATAB
dividend_in[2] => dividend.DATAB
dividend_in[3] => dividend.DATAB
divisor_in[0] => divisor.DATAB
divisor_in[1] => divisor.DATAB
divisor_in[2] => divisor.DATAB
divisor_in[3] => divisor.DATAB
divisor_in[4] => divisor.DATAB
ld_registerA => registerA.OUTPUTSELECT
ld_registerA => registerA.OUTPUTSELECT
ld_registerA => registerA.OUTPUTSELECT
ld_registerA => registerA.OUTPUTSELECT
ld_registerA => registerA.OUTPUTSELECT
ld_divisor => divisor.OUTPUTSELECT
ld_divisor => divisor.OUTPUTSELECT
ld_divisor => divisor.OUTPUTSELECT
ld_divisor => divisor.OUTPUTSELECT
ld_divisor => divisor.OUTPUTSELECT
ld_dividend => dividend.OUTPUTSELECT
ld_dividend => dividend.OUTPUTSELECT
ld_dividend => dividend.OUTPUTSELECT
ld_dividend => dividend.OUTPUTSELECT
dividend_shift => dividend.OUTPUTSELECT
dividend_shift => dividend.OUTPUTSELECT
dividend_shift => dividend.OUTPUTSELECT
dividend_shift => dividend.OUTPUTSELECT
dividend_q0_set => dividend.OUTPUTSELECT
save_subtracted => subtracted.OUTPUTSELECT
register_shift => registerA.OUTPUTSELECT
register_shift => registerA.OUTPUTSELECT
register_shift => registerA.OUTPUTSELECT
register_shift => registerA.OUTPUTSELECT
register_shift => registerA.OUTPUTSELECT
alu_op => Decoder0.IN0
ld_r => data_result.OUTPUTSELECT
ld_r => data_result.OUTPUTSELECT
ld_r => data_result.OUTPUTSELECT
ld_r => data_result.OUTPUTSELECT
registerA[0] <= registerA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
registerA[1] <= registerA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
registerA[2] <= registerA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
registerA[3] <= registerA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
registerA[4] <= registerA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_result[0] <= data_result[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_result[1] <= data_result[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_result[2] <= data_result[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_result[3] <= data_result[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|poly_function|hex_decoder:H0
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|poly_function|hex_decoder:H1
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|poly_function|hex_decoder:H2
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|poly_function|hex_decoder:H3
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|poly_function|hex_decoder:H4
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|poly_function|hex_decoder:H5
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


