\begin{Verbatim}[commandchars=\\\{\}]
    \PYG{c+c1}{// (*) Note: Using starter code provided on Quercus}
    \PYG{c+c1}{// SW[0]: reset signal}
    \PYG{c+c1}{// SW[1]: input signal (w)}

    \PYG{c+c1}{// KEY[0]: clock}

    \PYG{c+c1}{// LEDR[2:0]: current state}
    \PYG{c+c1}{// LEDR[9]: output (z)}

    \PYG{c+c1}{// SW[0]:       reset signal}
    \PYG{c+c1}{// SW[1]:       input signal (w)}

    \PYG{c+c1}{// KEY[0]:      clock}

    \PYG{c+c1}{// LEDR[2:0]:   current state}
    \PYG{c+c1}{// LEDR[9]:     output (z)}

    \PYG{k}{module} \PYG{n}{sequence\PYGZus{}detector}\PYG{p}{(}\PYG{n+no}{SW}\PYG{p}{,} \PYG{n+no}{KEY}\PYG{p}{,} \PYG{n+no}{LEDR}\PYG{p}{);}
        \PYG{k}{input} \PYG{p}{[}\PYG{l+m+mh}{9}\PYG{o}{:}\PYG{l+m+mh}{0}\PYG{p}{]} \PYG{n+no}{SW}\PYG{p}{;}
        \PYG{k}{input} \PYG{p}{[}\PYG{l+m+mh}{3}\PYG{o}{:}\PYG{l+m+mh}{0}\PYG{p}{]} \PYG{n+no}{KEY}\PYG{p}{;}
        \PYG{k}{output} \PYG{p}{[}\PYG{l+m+mh}{9}\PYG{o}{:}\PYG{l+m+mh}{0}\PYG{p}{]} \PYG{n+no}{LEDR}\PYG{p}{;}

        \PYG{k+kt}{wire} \PYG{n}{w}\PYG{p}{,} \PYG{n}{clock}\PYG{p}{,} \PYG{n}{resetn}\PYG{p}{,} \PYG{n}{z}\PYG{p}{;}

        \PYG{k+kt}{reg} \PYG{p}{[}\PYG{l+m+mh}{2}\PYG{o}{:}\PYG{l+m+mh}{0}\PYG{p}{]} \PYG{n}{y\PYGZus{}Q}\PYG{p}{,} \PYG{n+no}{Y\PYGZus{}D}\PYG{p}{;} \PYG{c+c1}{// y\PYGZus{}Q represents current state, Y\PYGZus{}D represents next state}

        \PYG{c+c1}{// (*) Note: Here our local param is for specification purpose of the states!}
        \PYG{k}{localparam} \PYG{n+no}{A} \PYG{o}{=} \PYG{l+m+mh}{3}\PYG{l+m+mb}{\PYGZsq{}b000}\PYG{p}{,} \PYG{n+no}{B} \PYG{o}{=} \PYG{l+m+mh}{3}\PYG{l+m+mb}{\PYGZsq{}b001}\PYG{p}{,} \PYG{n+no}{C} \PYG{o}{=} \PYG{l+m+mh}{3}\PYG{l+m+mb}{\PYGZsq{}b010}\PYG{p}{,} \PYG{n+no}{D} \PYG{o}{=} \PYG{l+m+mh}{3}\PYG{l+m+mb}{\PYGZsq{}b011}\PYG{p}{,} \PYG{n+no}{E} \PYG{o}{=} \PYG{l+m+mh}{3}\PYG{l+m+mb}{\PYGZsq{}b100}\PYG{p}{,} \PYG{n+no}{F} \PYG{o}{=} \PYG{l+m+mh}{3}\PYG{l+m+mb}{\PYGZsq{}b101}\PYG{p}{,} \PYG{n+no}{G} \PYG{o}{=} \PYG{l+m+mh}{3}\PYG{l+m+mb}{\PYGZsq{}b110}\PYG{p}{;}

        \PYG{c+c1}{// Connect inputs and outputs to internal wires}
        \PYG{k}{assign} \PYG{n}{w} \PYG{o}{=} \PYG{n+no}{SW}\PYG{p}{[}\PYG{l+m+mh}{1}\PYG{p}{];}
        \PYG{k}{assign} \PYG{n}{clock} \PYG{o}{=} \PYG{o}{\PYGZti{}}\PYG{n+no}{KEY}\PYG{p}{[}\PYG{l+m+mh}{0}\PYG{p}{];}
        \PYG{k}{assign} \PYG{n}{resetn} \PYG{o}{=} \PYG{n+no}{SW}\PYG{p}{[}\PYG{l+m+mh}{0}\PYG{p}{];}
        \PYG{k}{assign} \PYG{n+no}{LEDR}\PYG{p}{[}\PYG{l+m+mh}{9}\PYG{p}{]} \PYG{o}{=} \PYG{n}{z}\PYG{p}{;}
        \PYG{k}{assign} \PYG{n+no}{LEDR}\PYG{p}{[}\PYG{l+m+mh}{2}\PYG{o}{:}\PYG{l+m+mh}{0}\PYG{p}{]} \PYG{o}{=} \PYG{n}{y\PYGZus{}Q}\PYG{p}{;}

        \PYG{c+c1}{// State table}
        \PYG{c+c1}{// The state table should only contain the logic for state transitions}
        \PYG{c+c1}{// Do not mix in any output logic.  The output logic should be handled separately.}
        \PYG{c+c1}{// This will make it easier to read, modify and debug the code.}
        \PYG{k}{always} \PYG{p}{@(}\PYG{o}{*}\PYG{p}{)}
        \PYG{k}{begin}   \PYG{c+c1}{// Start of state\PYGZus{}table}
            \PYG{k}{case} \PYG{p}{(}\PYG{n}{y\PYGZus{}Q}\PYG{p}{)}
                \PYG{n+nl}{A:} \PYG{k}{begin}
                    \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{w}\PYG{p}{)} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{A}\PYG{p}{;}
                    \PYG{k}{else} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{B}\PYG{p}{;}
                    \PYG{k}{end}
                \PYG{n+nl}{B:} \PYG{k}{begin}
                    \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{w}\PYG{p}{)} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{A}\PYG{p}{;}
                    \PYG{k}{else} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{C}\PYG{p}{;}
                    \PYG{k}{end}
                \PYG{n+nl}{C:} \PYG{k}{begin}
                        \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{w}\PYG{p}{)} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{E}\PYG{p}{;}
                        \PYG{k}{else} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{D}\PYG{p}{;}
                    \PYG{k}{end}
                \PYG{n+nl}{D:} \PYG{k}{begin}
                        \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{w}\PYG{p}{)} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{E}\PYG{p}{;}
                        \PYG{k}{else} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{F}\PYG{p}{;}
                    \PYG{k}{end}
                \PYG{n+nl}{E:} \PYG{k}{begin}
                        \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{w}\PYG{p}{)} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{A}\PYG{p}{;}
                        \PYG{k}{else} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{G}\PYG{p}{;}
                    \PYG{k}{end}
                \PYG{n+nl}{F:} \PYG{k}{begin}
                        \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{w}\PYG{p}{)} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{E}\PYG{p}{;}
                        \PYG{k}{else} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{F}\PYG{p}{;}
                    \PYG{k}{end}
                \PYG{n+nl}{G:} \PYG{k}{begin}
                        \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{w}\PYG{p}{)} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{A}\PYG{p}{;}
                        \PYG{k}{else} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{C}\PYG{p}{;}
                    \PYG{k}{end}
                \PYG{k}{default}\PYG{o}{:} \PYG{n+no}{Y\PYGZus{}D} \PYG{o}{=} \PYG{n+no}{A}\PYG{p}{;}
            \PYG{k}{endcase}
        \PYG{k}{end}
        \PYG{c+c1}{// End of state\PYGZus{}table}

        \PYG{c+c1}{// State Register (i.e., FFs)}
        \PYG{k}{always} \PYG{p}{@(}\PYG{k}{posedge} \PYG{n}{clock}\PYG{p}{)}
        \PYG{k}{begin}   \PYG{c+c1}{// Start of state\PYGZus{}FFs (state register)}
            \PYG{k}{if}\PYG{p}{(}\PYG{n}{resetn} \PYG{o}{==} \PYG{l+m+mh}{1}\PYG{l+m+mb}{\PYGZsq{}b0}\PYG{p}{)}
                \PYG{n}{y\PYGZus{}Q} \PYG{o}{\PYGZlt{}=} \PYG{n+no}{A}\PYG{p}{;}
            \PYG{k}{else}
                \PYG{n}{y\PYGZus{}Q} \PYG{o}{\PYGZlt{}=} \PYG{n+no}{Y\PYGZus{}D}\PYG{p}{;}
        \PYG{k}{end}     \PYG{c+c1}{// End of state\PYGZus{}FFs (state register)}

        \PYG{c+c1}{// Output logic}
        \PYG{c+c1}{// Set z to 1 to turn on LED when in relevant states}
        \PYG{k}{assign} \PYG{n}{z} \PYG{o}{=} \PYG{p}{((}\PYG{n}{y\PYGZus{}Q} \PYG{o}{==} \PYG{n+no}{F}\PYG{p}{)} \PYG{o}{||} \PYG{p}{(}\PYG{n}{y\PYGZus{}Q} \PYG{o}{==} \PYG{n+no}{G}\PYG{p}{));}
    \PYG{k}{endmodule}
\end{Verbatim}
