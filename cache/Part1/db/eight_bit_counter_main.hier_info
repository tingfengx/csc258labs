|eight_bit_counter_main
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
HEX0[0] <= seven_segment_decoder:main2.m
HEX0[1] <= seven_segment_decoder:main2.m
HEX0[2] <= seven_segment_decoder:main2.m
HEX0[3] <= seven_segment_decoder:main2.m
HEX0[4] <= seven_segment_decoder:main2.m
HEX0[5] <= seven_segment_decoder:main2.m
HEX0[6] <= seven_segment_decoder:main2.m
HEX1[0] <= seven_segment_decoder:main1.m
HEX1[1] <= seven_segment_decoder:main1.m
HEX1[2] <= seven_segment_decoder:main1.m
HEX1[3] <= seven_segment_decoder:main1.m
HEX1[4] <= seven_segment_decoder:main1.m
HEX1[5] <= seven_segment_decoder:main1.m
HEX1[6] <= seven_segment_decoder:main1.m


|eight_bit_counter_main|eight_bit_counter:main0
enable => enable.IN1
clock => clock.IN8
clear_b => clear_b.IN8
Q[0] <= t_flip_flop:block7.Q
Q[1] <= t_flip_flop:block6.Q
Q[2] <= t_flip_flop:block5.Q
Q[3] <= t_flip_flop:block4.Q
Q[4] <= t_flip_flop:block3.Q
Q[5] <= t_flip_flop:block2.Q
Q[6] <= t_flip_flop:block1.Q
Q[7] <= t_flip_flop:block0.Q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block7
T => dff_input.IN1
T => dff_input.IN1
clock => clock.IN1
clear_b => clear_b.IN1
Q <= d_flip_flop:block1.q
not_Q <= d_flip_flop:block1.q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block7|d_flip_flop:block1
d => q~reg0.DATAIN
clock => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => q~reg0.ACLR


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block6
T => dff_input.IN1
T => dff_input.IN1
clock => clock.IN1
clear_b => clear_b.IN1
Q <= d_flip_flop:block1.q
not_Q <= d_flip_flop:block1.q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block6|d_flip_flop:block1
d => q~reg0.DATAIN
clock => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => q~reg0.ACLR


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block5
T => dff_input.IN1
T => dff_input.IN1
clock => clock.IN1
clear_b => clear_b.IN1
Q <= d_flip_flop:block1.q
not_Q <= d_flip_flop:block1.q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block5|d_flip_flop:block1
d => q~reg0.DATAIN
clock => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => q~reg0.ACLR


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block4
T => dff_input.IN1
T => dff_input.IN1
clock => clock.IN1
clear_b => clear_b.IN1
Q <= d_flip_flop:block1.q
not_Q <= d_flip_flop:block1.q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block4|d_flip_flop:block1
d => q~reg0.DATAIN
clock => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => q~reg0.ACLR


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block3
T => dff_input.IN1
T => dff_input.IN1
clock => clock.IN1
clear_b => clear_b.IN1
Q <= d_flip_flop:block1.q
not_Q <= d_flip_flop:block1.q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block3|d_flip_flop:block1
d => q~reg0.DATAIN
clock => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => q~reg0.ACLR


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block2
T => dff_input.IN1
T => dff_input.IN1
clock => clock.IN1
clear_b => clear_b.IN1
Q <= d_flip_flop:block1.q
not_Q <= d_flip_flop:block1.q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block2|d_flip_flop:block1
d => q~reg0.DATAIN
clock => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => q~reg0.ACLR


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block1
T => dff_input.IN1
T => dff_input.IN1
clock => clock.IN1
clear_b => clear_b.IN1
Q <= d_flip_flop:block1.q
not_Q <= d_flip_flop:block1.q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block1|d_flip_flop:block1
d => q~reg0.DATAIN
clock => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => q~reg0.ACLR


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block0
T => dff_input.IN1
T => dff_input.IN1
clock => clock.IN1
clear_b => clear_b.IN1
Q <= d_flip_flop:block1.q
not_Q <= d_flip_flop:block1.q


|eight_bit_counter_main|eight_bit_counter:main0|t_flip_flop:block0|d_flip_flop:block1
d => q~reg0.DATAIN
clock => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => q~reg0.ACLR


|eight_bit_counter_main|seven_segment_decoder:main1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN0
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[1] => m.IN0
c[1] => m.IN1
c[1] => m.IN0
c[1] => m.IN1
c[1] => m.IN0
c[1] => m.IN1
c[1] => m.IN1
c[1] => m.IN1
c[1] => m.IN1
c[1] => m.IN0
c[1] => m.IN1
c[2] => m.IN1
c[2] => m.IN0
c[2] => m.IN0
c[2] => m.IN0
c[2] => m.IN1
c[2] => m.IN0
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
m[0] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[1] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[2] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[3] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[4] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[5] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[6] <= m.DB_MAX_OUTPUT_PORT_TYPE


|eight_bit_counter_main|seven_segment_decoder:main2
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN0
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[0] => m.IN1
c[1] => m.IN0
c[1] => m.IN1
c[1] => m.IN0
c[1] => m.IN1
c[1] => m.IN0
c[1] => m.IN1
c[1] => m.IN1
c[1] => m.IN1
c[1] => m.IN1
c[1] => m.IN0
c[1] => m.IN1
c[2] => m.IN1
c[2] => m.IN0
c[2] => m.IN0
c[2] => m.IN0
c[2] => m.IN1
c[2] => m.IN0
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
c[3] => m.IN1
m[0] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[1] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[2] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[3] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[4] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[5] <= m.DB_MAX_OUTPUT_PORT_TYPE
m[6] <= m.DB_MAX_OUTPUT_PORT_TYPE


