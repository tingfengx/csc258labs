module hex_counter(d, clock, reset_n, par_load, enable);
	wire [3:0] d;
	wire clock;
	wire reset_n;
	wire par_load, enable;
	reg [3:0] q;
	
	always @(posedge clock)
	begin
		if (reset_n == 1'b0)
			q <= 0
		else if (par_load == 1'b1)
			q <= d
		else if (enable == 1'b1)
			begin
				if (q == 4'b1111)
					q <= 0
				else 
					q <= q + 1'b1
			end
	end

endmodule
	
module rate_divider();

endmodule